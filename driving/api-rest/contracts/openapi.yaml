  openapi: 3.0.3

  info:
    title: Price Manager API
    version: 1.0.0
    contact:
      name: DEV (Napoleon Avila Ochoa)
      email: napoavi@gmail.com
    description: API for price management and catalogue services.

  servers:
    - url: http://localhost:8080
      description: Development environment

  tags:
    - name: Price Controller
      description: API to manage prices

  security:
    - bearerAuth: []

  paths:
    /v1/price/findByBrandProductBetweenDate:
      get:
        tags:
          - Price Controller
        summary: Get a Price by its brandId, productId and offer date
        description: Returns the applicable price based on brand, product and query date
        operationId: findByBrandProductBetweenDate
        parameters:
          - name: brandId
            in: query
            required: true
            description: Brand identifier
            schema:
              type: integer
              format: int64
              example: "1"
          - name: productId
            in: query
            required: true
            description: Product identifier
            schema:
              type: integer
              format: int64
              example: "35455"
          - name: dateQuery
            in: query
            required: true
            description: Query date to find applicable price
            schema:
              type: string
              format: date-time
              example: "2020-06-14T10:00:00Z"
        responses:
          "200":
            description: Price successfully found
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/PriceResponse"
          "400":
            description: Invalid parameters supplied
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
          "404":
            description: Price not found
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
          "500":
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

  components:
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
        description: |
          JWT Authorization header using the Bearer scheme.\
          The client must send this token in the Authorization header when making requests to protected resources.\
          Enter the token with the value `Bearer: xxxxxxxxxx`

    schemas:
      PriceResponse:
        type: object
        required:
          - id
          - brandId
          - price
          - startDate
          - endDate
        properties:
          id:
            type: integer
            format: int64
            description: Price identifier
            example: "1"
          brandId:
            type: integer
            format: int64
            description: Brand identifier
            example: "35455"
          price:
            type: number
            format: double
            description: Price value
            example: 35.50
          startDate:
            type: string
            format: date-time
            description: Start date when price is applicable
            example: "2024-06-14T15:45:00Z"
          endDate:
            type: string
            format: date-time
            description: End date when price is applicable
            example: "2024-12-31 23:59:59Z"

      Error:
        type: object
        required:
          - code
          - message
        properties:
          code:
            type: string
            description: Error code
            example: "PRICE_NOT_FOUND"
          message:
            type: string
            description: Error message
            example: "No price found for the given parameters"
          timestamp:
            type: string
            format: date-time
            description: Error timestamp
            example: "2024-01-15T10:30:00Z"